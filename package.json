{
  "name": "lumiereWordpress",
  "description": "Lumi√®re Movies WordPress plugin",
  "main": "gulpfile.js",
  "private": true,
  "keywords": [
    "movies",
    "taxonomy",
    "widget",
    "movie stars",
    "imdb",
    "wordpress",
    "plugin",
    "film"
  ],
  "author": "JC Vignoli <dev@jcvignoli.com> (https://www.jcvignoli.com)",
  "homepage": "https://github.com/jcvignoli/lumiere-movies#README",
  "license": "GPL-3.0",
  "scripts": {
    "watch": "gulp watch",
    "watch:wp": "wp-scripts start --output-path=dist/assets/blocks --source-path=src/assets/blocks",
    "browserWatch": "gulp browserWatch",
    "build": "if [ -d \"./dist\" ];then rm -R ./dist; else mkdir ./dist; fi && npm run build:wpbuild && gulp build --ssh false",
    "build:wpbuild": "wp-scripts build --output-path=dist/assets/blocks --source-path=src/assets/blocks",
    "build:github": "mkdir ./dist && gulp -f tests/gulpfile-github.js build",
    "phpdoc": "phpDocumentor run",
    "plugincheck": "wp @lumiere plugin check lumiere-movies --ignore-codes='WordPress.Security.ValidatedSanitizedInput.InputNotSanitized, WordPress.Security.ValidatedSanitizedInput.MissingUnslash,WordPress.Security.ValidatedSanitizedInput.InputNotValidated, WordPress.Security.NonceVerification.Recommended,WordPress.Security.NonceVerification.Missing,PluginCheck.CodeAnalysis.ImageFunctions.NonEnqueuedImage, WordPress.PHP.DevelopmentFunctions.error_log_wp_debug_backtrace_summary,WordPress.PHP.DevelopmentFunctions.error_log_debug_backtrace'",
    "codeceptionRemote": "php vendor/bin/codecept run -vvv AcceptanceRemote --env wpchrome",
    "codeceptionLocal": "php vendor/bin/codecept run -vvv Acceptance --env wpchrome",
    "phpcs": "vendor/bin/phpcs | tee tmp/logs/Results-phpcs-wp.txt",
    "phpmd": "vendor/bin/phpmd src html ./phpmd.xml.dist > tmp/logs/Results-phpmd.html",
    "phpstan": "vendor/bin/phpstan -v | tee tmp/logs/Results-phpstan.txt",
    "phpstan-clean": "if [ -d \"tmp/cache/phpstan\" ];then rm -R tmp/cache/phpstan && vendor/bin/phpstan -v | tee tmp/logs/Results-phpstan.txt; else vendor/bin/phpstan -v | tee tmp/logs/Results-phpstan.txt; fi",
    "psalm": "vendor/bin/psalm --show-info=true --report=tmp/logs/Results-psalm.txt",
    "psalm-clean": "if [ -d \"tmp/cache/psalm\" ];then rm -R tmp/cache/psalm && npm run psalm; else npm run psalm; fi",
    "phpdd": "vendor/bin/phpdd ./src --exclude $(grep -oP \"(?<=^exclude: )[^/]+\" phpdd.dist) | tee tmp/logs/Results-phpdd-deprecated.txt",
    "phan": "vendor/bin/phan -k phan.php --output-mode=text -p | tee tmp/logs/Results-phan.txt",
    "analysis": "npm-run-all -c phpcs phpmd phpstan phan phpdd psalm plugincheck"
  },
  "devDependencies": {
    "@wordpress/scripts": "*",
    "browser-sync": "*",
    "fs-extra": "*",
    "gulp": "*",
    "gulp-autoprefixer": "*",
    "gulp-changed": "*",
    "gulp-clean-css": "*",
    "gulp-if": "*",
    "gulp-imagemin": "*",
    "gulp-notify": "*",
    "gulp-plumber": "*",
    "gulp-rename": "*",
    "gulp-replace": "*",
    "gulp-ssh": "*",
    "gulp-terser": "*",
    "npm-run-all": "*"
  },
  "type": "module",
  "overrides": {
    "gulp-ssh": {
      "ssh2": "^1.14.0"
    },
   "http-cache-semantics": "^4.1.1",
   "semver-regex": "^3.1.3",
   "got": "11.8.5",
   "cross-spawn": "^6.0.6"
  }
}
